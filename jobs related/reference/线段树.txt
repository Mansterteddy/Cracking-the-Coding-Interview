线段树，类似于区间树，它在各个节点保存一条线段（数组中的一段子数组），主要用于高效解决连续区间的动态查询问题，由于二叉结构的特性，它
基本能保持每个操作的复杂度为O(logn)。
线段树的每个节点都表示一个区间，子节点则分别表示父节点的左右半区间，例如父亲的区间是[a, b]，那么(c = (a + b) / 2)，左儿子的区间是[a, c]，
右儿子的区间是[c+1, b]

一个具体问题：从数组arr[0,...,n-1]中查找某个数组某个区间内的最小值，其中数组大小固定，但是数组中的元素的值可以随时更新。

解法一：遍历数组区间找到最小值，时间复杂度是O(n)，额外空间复杂度为O(1)，当数据量特别大，而查询操作很频繁时，耗时很很长。

解法二：使用一个二维数组来保存提前计算好的区间[i, j]内的最小值，那么预处理时间为O(n^2)，查询耗时为O(1)，仍然需要额外O(n^2)的空间，当数据量
特别大时，空间消耗很大，而且在改变了数组中的某一个值时，更新二维数组中的最小值也很麻烦。

解法三：线段树，预处理耗时O(n)，查询、更新操作O(logn)，需要额外空间O(n)。 

叶子结点为原始数组arr中的元素
非叶子结点代表它所有子孙叶子节点所在区间的最小值

由于线段树的父节点区间是平分分割到左右子树，因此线段树是完全二叉树，对于包含n个节点的完全二叉树，一定有n-1个非叶子节点，总共是2n-1个节点，所以
所需的空间复杂度是O(n)。那么线段树的操作：创建线段树、查询、节点更新。

中查找某个数组某个区间内的最小值，其中数组大小固定，但是数组中的元素的值可以随时更新。
